version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: jobzee-postgres
    environment:
      POSTGRES_DB: jobzee
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - jobzee-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: jobzee-redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    networks:
      - jobzee-network

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: jobzee-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - jobzee-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: jobzee-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - ./data/kafka:/var/lib/kafka/data
    networks:
      - jobzee-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: jobzee-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./data/minio:/data
    networks:
      - jobzee-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: jobzee-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./data/qdrant:/qdrant/storage
    networks:
      - jobzee-network

  # Backend Services
  api-service:
    build:
      context: ./jobzee-backend
      dockerfile: Dockerfile
    container_name: jobzee-api
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=jobzee
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKERS=kafka:9092
      - MINIO_ENDPOINT=minio:9000
    depends_on:
      - postgres
      - redis
      - kafka
      - minio
    command: ["./api"]
    networks:
      - jobzee-network

  job-service:
    build:
      context: ./jobzee-backend
      dockerfile: Dockerfile
    container_name: jobzee-job-service
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=jobzee
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    command: ["./jobservice"]
    networks:
      - jobzee-network

  candidate-service:
    build:
      context: ./jobzee-backend
      dockerfile: Dockerfile
    container_name: jobzee-candidate-service
    ports:
      - "8082:8082"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=jobzee
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    command: ["./candidateservice"]
    networks:
      - jobzee-network

  agent-service:
    build:
      context: ./jobzee-backend
      dockerfile: Dockerfile
    container_name: jobzee-agent-service
    ports:
      - "8083:8083"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=jobzee
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    command: ["./agentservice"]
    networks:
      - jobzee-network

  # Frontend
  frontend:
    build:
      context: ./jobzee-frontend
      dockerfile: Dockerfile
    container_name: jobzee-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://jobzee-api:8080/api/v1
    depends_on:
      - api-service
    networks:
      - jobzee-network

  # Agent Services
  job-finder-agent:
    build:
      context: ./jobzee-agents
      dockerfile: Dockerfile
    container_name: jobzee-job-finder-agent
    environment:
      - KAFKA_BROKERS=kafka:9092
      - VECTOR_DB_URL=http://qdrant:6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - kafka
      - qdrant
    command: ["python", "job_finder_agent/main.py"]
    networks:
      - jobzee-network

  candidate-finder-agent:
    build:
      context: ./jobzee-agents
      dockerfile: Dockerfile
    container_name: jobzee-candidate-finder-agent
    environment:
      - KAFKA_BROKERS=kafka:9092
      - VECTOR_DB_URL=http://qdrant:6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - kafka
      - qdrant
    command: ["python", "candidate_finder_agent/main.py"]
    networks:
      - jobzee-network

networks:
  jobzee-network:
    driver: bridge
